name: CI/CD Publish

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  metadata:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == 'true'
    timeout-minutes: 1
    outputs:
      version: ${{ steps.variables.outputs.version }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Set CI/CD variables
        id: variables
        run: |
          echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
      - name: List variables
        run: |
          export VERSION="${{ steps.variables.outputs.version }}"
          make list-variables
  publish:
    runs-on: ubuntu-latest
    needs: [metadata]
    if: github.event.pull_request.merged == 'true'
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v3
      - name: List Variables
        run: |
          export VERSION="${{ needs.metadata.outputs.version }}"
          make list-variables
      - name: Get the artefacts
        run: |
          echo "Getting the artefacts created by the build stage ..."
          # TODO: Use either action/cache or action/upload-artifact
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.metadata.outputs.version }}
          release_name: Release ${{ needs.metadata.outputs.version }}
          body: |
            Release of ${{ needs.metadata.outputs.version }}
          draft: false
          prerelease: false
      # - name: Upload release asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./*
      #     asset_name: repository-template-${{ needs.metadata.outputs.version }}.tar.gz
      #     asset_content_type: application/gzip
